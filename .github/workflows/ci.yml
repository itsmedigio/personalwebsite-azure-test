name: Deploy Static Website to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy: # Renamed job for clarity
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18.x, 20.x] # Use specific LTS versions instead of lts/* for better reproducibility

    steps:
      - name: Checkout Source Repository üõé
        uses: actions/checkout@v4 # Updated to v4 for latest features/security

      - name: Setup Node.js Environment üèó
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm" # Use built-in cache for npm
          cache-dependency-path: "**/package-lock.json" # Specify lock file for caching

      # The separate Cache node_modules step is often redundant with actions/setup-node@v4's built-in cache.
      # If you encounter issues, you can uncomment and adjust the old cache step,
      # but try with the built-in one first.
      # - name: Cache node_modules üì¶
      #   uses: actions/cache@v4 # Updated to v4
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install dependencies üë®üèª‚Äçüíª
        run: npm ci --prefer-offline --no-audit --force

      - name: Build Next.js Static Website üöÄ
        run: npm run build # Changed from 'generate' to 'build' for Next.js static export

      - name: Deploy to itsmedigio.github.io üì§
        env:
          GH_PAGES_REPO: itsmedigio/itsmedigio.github.io.git
          SOURCE_DIR: out # Next.js static export output directory
        run: |
          # The current working directory is the repository where the workflow runs (e.g., personalwebsite-azure-test)
          # We need to clone the target repo (itsmedigio.github.io) in a sibling directory.
          cd .. # Move up one level from the source repo directory

          # Clone the target repository
          git clone https://${{secrets.ACCESS_TOKEN}}@github.com/$GH_PAGES_REPO

          # Navigate into the cloned target repository
          cd ./itsmedigio.github.io/

          # Clean out existing files to ensure a fresh deploy (optional but recommended for static sites)
          # Use `git rm -rf .` if you want to remove all tracked files before copying new ones,
          # but be careful not to remove .git/
          git rm -rf *
          # Re-add .gitignore and other necessary files if they were removed
          # cp ../<your-source-repo-name>/.gitignore . # Example, adjust as needed

          # Copy the built static files from the source repo's 'out' directory
          # The source repo is at ../<your-source-repo-name>/
          # You need to replace 'personalwebsite-azure-test' with the actual name of this repository
          # or dynamically get it. For simplicity, we assume 'personalwebsite-azure-test' is the source repo name.
          cp -a ./personalwebsite-azure-test/${SOURCE_DIR}/. . # Copy contents from source repo's 'out' to target repo root

          ls -la # List files to verify copy

          # Configure Git user for commits
          git config user.email "itsmedigio@users.noreply.github.com"
          git config user.name "itsmedigio"

          # Add all changes, commit if there are changes, and push
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -am 'Automated deploy from CI/CD' && git push https://${{secrets.ACCESS_TOKEN}}@github.com/$GH_PAGES_REPO
